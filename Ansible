#!/usr/bin/env python
 
import json
from collections import namedtuple
from ansible.parsing.dataloader import DataLoader
from ansible.vars import VariableManager
from ansible.inventory import Inventory
from ansible.playbook.play import Play
from ansible.executor.task_queue_manager import TaskQueueManager
from ansible.plugins.callback import CallbackBase
 
Options = namedtuple('Options',
               ['connection', 'module_path', 'forks', 'become',
                'become_method', 'become_user', 'check']
           )
 
#initialize needed objects
 
variable_manager = VariableManager()
loader = DataLoader()
 
options = Options(
   connection='ssh', module_path='', forks=100, become=True,
   become_method='sudo', become_user='root', check=False)
passwords = dict(vault_pass='secret')
 
inventory = Inventory(loader=loader, variable_manager=variable_manager,
                     host_list='/etc/ansible/hosts')
variable_manager.set_inventory(inventory)
 
# create play with tasks
play_source =  dict(
       name = "Ping and install httperf in all nodes",
       hosts = 'all',
       gather_facts = 'no',
       tasks = [
           dict(action=dict(module='ping', args=''), register='shell_out'),
dict(action=dict(module='apt', args=dict(name='httperf', state='latest')), register='shell_out')
        ]
   )
play = Play().load(play_source, variable_manager=variable_manager, loader=loader)
 
# actually run it
tqm = None
try:
   tqm = TaskQueueManager(
           inventory=inventory,
           variable_manager=variable_manager,
           loader=loader,
           options=options,
           passwords=passwords,
           stdout_callback="default",
       )
   result = tqm.run(play)
finally:
   if tqm is not None:
       tqm.cleanup()
